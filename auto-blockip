#!/bin/bash

# by Todd Stein
# Monday, May 05 2014
# Automatically blocks nasty IP addresses
# Currently in testing; claws are retracted for now


# PATH definition is required for successful cron invocation
PATH=$HOME/bin:/usr/local/install/xcat/bin:/usr/local/bin:/usr/bin:/sbin:/bin:$PATH


MAX_ALLOWED_FAILURES=15		# more than this many failed logins = ban
LOOK_BACK=10			# number of minutes to search back through /var/log/secure for auth failures
EMAIL_ADDRESS=tbs@usc.edu	# email will be sent here
COUNTRY_FILE=/tmp/$(basename $0)_country_codes		# used for country name lookups
LOG_FILE=/tmp/$(basename $0)_block_log			# log ip blocks here -- existing entries won't be blocked again
WHITELIST="68.181|128.125|10.125|10.126|192.168"	# pipe-delimited list of whitelisted ip address prefixes


# initialize $LOG_FILE if necessary
[ -f "$LOG_FILE" ] || >"$LOG_FILE"

# download country database if necessary
[ -f "$COUNTRY_FILE" ] || curl -s http://www.geonames.org/countries/ >"$COUNTRY_FILE"


blockIP() { # input is a string
	local ip=$1
	local SEARCH_STRING="^DROP +all .+ ${ip//./\.} +0.0.0.0/0 *$"
	local COMMAND="
		if ! iptables -L INPUT -n | egrep -q \"$SEARCH_STRING\"; then
			iptables -I INPUT 1 -s $ip -j DROP
		fi
	"

	# block it!
	eval "$COMMAND"

	# if we're on an xcat-managed cluster, block $ip on all heanodes, too
	which psh &>/dev/null && psh headnodes "$COMMAND"
}


getIPandFQDN() { # input is a string
	local host=$1
	if [[ $host =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
		ip=$host
	else
		fqdn=$host
		ip=$(host $host | grep 'has address' | egrep -om1 '([0-9]{1,3}\.){3}[0-9]{1,3}$')
	fi
}


getWhoisAndCountry() { # input is an ip address
	local host=$1

	whois=$(whois $host)

	# try to determine country code
	local country_code=$(printf "%s\n" "$whois" | egrep -im1 'country(-code)?:')
	if [[ -z $country_code ]]; then # if whois didn't return real info for $host, try querying the network handle instead
		local handle=$(printf "%s\n" "$whois" | grep -v '^#' | egrep -om1 '\(.+\)' | egrep -o '[^()]+')
		sleep 1 # be respectful of the whois server
		whois=$(whois $handle)
		country_code=$(printf "%s\n" "$whois" | egrep -im1 'country(-code)?:')
	fi

	# extract the actuall country code from the line. the final egrep is required sometimes, presumably because of hidden characters.
	country_code=$(printf "%s\n" "$country_code" | awk -F'[ :]+' '{print toupper($NF)}' | egrep -o "[A-Z]+")

	# translate the code to an actual name.
	country=$(grep "name=\"$country_code\"" "$COUNTRY_FILE" | egrep -o 'href="[^"]+">([^<]+)' | sed -r 's/.+>//')
	country=${country:-country unknown}
}


# generate list of possible attacks - ignore hosts from .usc.edu domain
attackers=$(last_n_minutes ${LOOK_BACK} /var/log/secure | grep 'authentication failure' | egrep -o 'rhost=[^ ]+' | egrep -v '\.usc\.edu$' | sort | uniq -c | sort -nr | awk -F'[= ]+' "\$2 > $MAX_ALLOWED_FAILURES { print \$NF }")


for rhost in $attackers; do

	unset ip fqdn whois country

	# set $ip and $fqdn
	getIPandFQDN $rhost

	# ensure $ip is not in USC address space
	[[ $WHITELIST && $ip =~ ^(${WHITELIST//./\.}) ]] && continue

	# second check to ensure that this is not one of our machines!
	egrep -q "\b(${rhost//./\.}|${ip//./\.})\b" /etc/hosts && continue

	# grab full secure history of $rhost
	log=$(egrep "( |=)${rhost//./\.}( |$)" /var/log/secure)

	# set $whois and $country
	getWhoisAndCountry $ip

	subject="Squashed breakin attempt from $ip ($country)"
	heading="Packets from $ip${fqdn:+ ($fqdn)} are now being dropped by all headnodes. The following lines provide information about the remote host, as well as a recent history of communications from it. The last 15 minutes of the log were used to determine that the activity was malevolent.

To unblock this IP, run 'unblockip $ip' as root on hpc-admin."

	iptables -t filter -L INPUT -n | fgrep -q " $ip " || grep -q " ${ip//./\.}$" "$LOG_FILE"
	if [[ $? != 0 ]]; then
		#blockIP $ip
		printf "%s\t%s\n" "$(date '+%b %d %H:%M:%S')" "$ip" >>"$LOG_FILE"
		printf "%s\n\n\n%s\n\n\n%s" "$heading" "$whois" "$log" | mail -s "$subject" "$EMAIL_ADDRESS"
	fi
	sleep 1 # be respectful of the whois server
done
